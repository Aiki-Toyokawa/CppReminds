クラスclass　(ユーザー定義型)

クラスを宣言するときはclassを使う
複雑なプログラムを効率よく作成することができる
クラス内には変数や関数をまとめて宣言できる
それをメンバと呼び、それぞれデータメンバ(メンバ変数)、メンバ関数と呼ぶ
スコープ解決演算子 :: を使ってメンバがどのクラスのメンバ関数であるのかを指定する
クラス型の変数はオブジェクトまたはインスタンスと呼ばれる
ポインタからメンバにアクセスするときにはアロー演算子を使う　->
オブジェクトの作成にメモリが確保されることをオブジェクトを作成するという
publicメンバにはクラスの外からアクセスできる
データメンバ　→　private
メンバ関数　　→　public　　　　とする
クラスの中にデータメンバとメンバ関数をひとまとめにして保護したいメンバに、
privateをつけてアクセスできないようにすることをカプセル化という
privateとpublicはアクセス指定子と呼ばれる
クラス宣言内に定義したメンバ関数は、インライン関数となる

データメンバ - モノの性質・状態
メンバ関数   - モノの機能

例)
class Car {
public:
	int num;
	double gas;
	void show();
};

int main() {
	Car c;         //クラス型の変数はオブジェクトまたはインスタンスと呼ばれる
	c.num = 5806;
	c.gas = 34.5;
}

void Car::show() {
	std::cout << "Car number is " << num;
}

1.メンバ関数の定義
戻り値の型 クラス名::メンバ関数名(引数リスト){
     ...
}



